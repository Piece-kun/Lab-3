name: C++ Build & Test
on:
  push:
    branches:
      - main  # Запуск при пуше в main
  pull_request:
    branches:
      - main  # Запуск при PR в main
  workflow_dispatch:  # Ручной запуск через GitHub Actions UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Обновлённая версия

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y g++

      - name: Compile program
        run: make -C src

      - name: Save artifact
        uses: actions/upload-artifact@v4  # Обновлённая версия
        with:
          name: compiled-program
          path: src/programm    # Сохранение бинарника
          
      - name: Debug Files
        run: ls -R
              
  test:
    runs-on: ubuntu-latest
    needs: build  # Запуск после успешной сборки

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y g++

      - name: Run tests
        run: make -C src test
  
  pack:
    runs-on: ubuntu-latest
    needs: test  # Запуск после успешного теста

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Create Debian package
        run: |
          mkdir -p package/DEBIAN
          echo "Package: matrix" >> package/DEBIAN/control
          echo "Version: 1.0" >> package/DEBIAN/control
          echo "Section: base" >> package/DEBIAN/control
          echo "Priority: optional" >> package/DEBIAN/control
          echo "Architecture: amd64" >> package/DEBIAN/control
          echo "Depends: libc6 (>= 13.0.4-32)" >> package/DEBIAN/control
          mkdir -p package/usr/bin
          cp src/programm package/usr/bin/matrix
          dpkg-deb --build package matrix.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: matrix-deb-package
          path: matrix.deb

  deploy:
    runs-on: ubuntu-latest
    needs: pack
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Debian package
        uses: actions/download-artifact@v4
        with:
          name: matrix-deb-package
          path: .

      - name: Install Docker (Official Repo)
        run: |
          sudo apt update
          sudo apt install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          
      - name: Build Docker image
        run: |
          echo "Creating Dockerfile..."
          cat <<EOF > Dockerfile
          FROM ubuntu:24.04
          RUN apt-get update && apt-cache policy libc6
          RUN apt-get update && apt-get install -y libc6 gdebi-core
          COPY matrix.deb /tmp/matrix.deb
          RUN gdebi -n /tmp/matrix.deb
          CMD ["matrix"]
          EOF
          docker build -t matrix-image .

      - name: Run Docker container
        run: |
          docker run --rm matrix-image

